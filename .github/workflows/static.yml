# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # schedule:
  #   - cron: 0 */3 * * *
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3.0.2
        with:
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.head_ref }}
          clean: true
      - name: Setup Moon
        uses: moonrepo/setup-moon-action@v1
      - name: 🛠 NodeJS
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Deps
        if: ${{ steps.npm-cache-dir.outputs.cache-hit != 'true' }}
        run: npm install
      - name: Build site
        run: npm run moon run site:build
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '${{ github.workspace }}/packages/site/dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
